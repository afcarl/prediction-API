version: '2.1'

services:

  nginx:
    container_name: nginx
    build: ./services/nginx/
    restart: always
    ports:
      - 80:80
    depends_on:
      model-server:
        condition: service_started
    links:
      - model-server

  postgres-db:
    container_name: postgres-db
    build: ./services/db
    #volumes:
    #  - ./postgres_data:/var/lib/postgresql/data
    ports:
      - 5435:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    # networks:
    #  - prediction-network
    healthcheck:
      test: exit 0

  model-iris:
    container_name: model-iris
    build:
      context: ./services/containerize_model/
      args:
        - model_dir=models/iris
    ports:
      - 5002:5000
    # networks:
    #   - prediction-network

  model-server:
    container_name: model-server
    build: .
    expose:
      - "5000"
    environment:
      - APP_SETTINGS=services.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@postgres-db:5432/prediction_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@postgres-db:5432/prediction_test
    depends_on:
      postgres-db:
        condition: service_healthy
    # networks:
    #   - prediction-network
    command: gunicorn -b 0.0.0.0:5000 manage:app